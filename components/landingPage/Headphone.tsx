/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 public/landingPage/headphone.glb headset.tsx --typescript 
*/

import React from 'react'
import { useGLTF } from '@react-three/drei'
import { Mesh, MeshStandardMaterial } from 'three'

// Tipado mínimo para tu modelo
type GLTFResult = {
  nodes: {
    headphone: Mesh
    Circle: Mesh
  }
  materials: {
    'Material.002': MeshStandardMaterial
    'Material.001': MeshStandardMaterial
  }
}

export default function Headphone(props: React.ComponentProps<'group'>) {
  // Tipado mínimo usando "any as GLTFResult" para que TS no se queje
  const { nodes, materials } = useGLTF('landingPage/headphone.glb') as any as GLTFResult

  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.headphone.geometry} material={materials['Material.002']} scale={1.091}>
        <mesh
          geometry={nodes.Circle.geometry}
          material={materials['Material.001']}
          position={[0.888, -0.931, 0]}
          rotation={[0, 0, 1.047]}
          scale={[0.98, 0.808, 0.98]}
        />
      </mesh>
    </group>
  )
}

// Preload del modelo
useGLTF.preload('landingPage/headphone.glb')
